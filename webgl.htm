<!doctype html><html><head><title>WebGL</title>
<style type="text/css">
html,body{ padding: 0; margin: 0; }
canvas { position: absolute; width: 100%; height: 100%; }
</style>
</head>
<body>
<canvas id="webgl"></canvas>
<script master>
var gl;

function init(){
  gl=document.getElementById('webgl').getContext('webgl');
  gl.clearColor(0.0,0.0,0.0,1);
  gl.enable(gl.DEPTH_TEST);
  gl.depthFunc(gl.LEQUAL);
  gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);
}

function getShader(gl, id) {
  var shaderScript, theSource, currentChild, shader;

  if(id && id.src && id.type) {
    theSource = id.src;
    shaderScript = id;
  } else if(id && (shaderScript = document.getElementById(id))) {
    theSource = "";
    currentChild = shaderScript.firstChild;
    while(currentChild) {
      if (currentChild.nodeType == currentChild.TEXT_NODE) theSource += currentChild.textContent;
      currentChild = currentChild.nextSibling;
    }
  } else return null;

  if (shaderScript.type == "x-shader/x-fragment") {
    shader = gl.createShader(gl.FRAGMENT_SHADER);
  } else if (shaderScript.type == "x-shader/x-vertex") {
    shader = gl.createShader(gl.VERTEX_SHADER);
  } else {
     return null;
  }

  gl.shaderSource(shader, theSource); // The * code !
  gl.compileShader(shader);

  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {
      alert("An error occurred compiling the shaders: " + gl.getShaderInfoLog(shader));
      return null;
  }

  return shader;
}

init();
</script>

<script id="shader-fs" type="x-shader/x-fragment">
  void main(void) {
    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);
  }
</script>


</body>
</html>
